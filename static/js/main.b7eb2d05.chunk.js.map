{"version":3,"sources":["to-do-list/ListItems.js","to-do-list/AddToDo.js","to-do-list/EditToDo.js","to-do-list/ToDoList.js","timer/Timer.js","images/IMG_0009.JPG","images/basil.JPG","study-break/StudyBreak.js","images/study_icon.png","navigation/NavBar.js","App.js","index.js"],"names":["ListItems","props","className","toDos","length","map","toDo","icon","defaultChecked","completed","checked","id","onChange","handleCheck","setCompleted","task","type","onClick","editToDo","deleteToDo","AddToDo","initialValue","useState","setToDo","onSubmit","event","preventDefault","addToDo","placeholder","value","target","EditToDo","currentToDo","useEffect","updateToDo","setEditing","ToDoList","listOfToDos","key","localStorage","window","getItem","parsed","JSON","parse","push","sort","a","b","setToDos","initialCompleted","i","editing","setCurrentToDo","updatedToDo","setItem","toString","stringify","lastElement","filter","filteredValues","removeItem","Timer","timeRemaining","setTimeRemaining","timerStart","setTimerStart","alert","useAlert","resetTimer","show","style","fontFamily","intervalId","setInterval","clearInterval","hours","Math","floor","minutes","seconds","StudyBreak","cat1","cat2","imageURLs","setImageURLs","newImagePressed","setNewImagePressed","Promise","all","fetch","cat1Response","cat2Response","json","cat1URL","cat2URL","url","console","log","alt","src","onError","e","onerror","cat1Default","cat2Default","NavBar","height","to","smooth","offset","App","template","AlertTemplate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7eb2d05.chunk.js","sourcesContent":["import React from 'react';\r\nimport { BsTrash, BsPencil, BsCheck } from 'react-icons/bs';\r\nimport { Checkbox } from 'pretty-checkbox-react';\r\n\r\nimport '@djthoms/pretty-checkbox';\r\n\r\nfunction ListItems(props){\r\n\r\n//displays the to do list items that were retrieved from local storage and\r\n//applies the appropriate checked/unchecked value.\r\n\r\n//displays \"No tasks have been added\" if the list is empty.\r\n return (\r\n        <div className=\"list-items-and-title\">\r\n            <h2 className=\"todo-title\">To Do</h2>\r\n                {props.toDos.length > 0 ? (\r\n                    props.toDos.map((toDo) =>\r\n                    <form className=\"list-items\" key={toDo.id}>\r\n                        <Checkbox icon={<BsCheck className=\"svg\" data-type=\"svg\"/>} className=\"todo-checkbox\" aria-label=\"checkbox\" defaultChecked={toDo.completed} checked={props.completed[toDo.id].completed} onChange={ () => {\r\n                            props.handleCheck(toDo);\r\n                            props.setCompleted({...props.completed, [toDo.id]: toDo.completed});\r\n                        }}></Checkbox>\r\n                        <span className=\"todo-item\">{toDo.task}</span>\r\n                        <button className=\"edit-todo yellow-button\" aria-label=\"edit\" type=\"button\" onClick={() => props.editToDo(toDo)}><BsPencil/></button>\r\n                        <button className=\"delete-todo red-button\" aria-label=\"delete\" type=\"button\" onClick={() => props.deleteToDo(toDo.id)}><BsTrash/></button>\r\n                    </form>\r\n                    )\r\n                ) : <div className=\"empty-list\">No tasks have been added.</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItems;","import React, {useState} from 'react';\r\nimport { BsPlus } from 'react-icons/bs';\r\n\r\nfunction AddToDo(props){\r\n    const initialValue = { id: null, task: '', completed: false};\r\n    const [toDo, setToDo] = useState(initialValue);\r\n    \r\n    //setting toDo's values\r\n    const handleInput = (event) => setToDo({ ...toDo, task: event.target.value })\r\n\r\n    //adding toDo using function from ToDoList\r\n    function addButtonClicked(event){\r\n        event.preventDefault();\r\n        if(!toDo.task) return;\r\n\r\n        props.addToDo(toDo);\r\n        setToDo(initialValue);\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-todo\" onSubmit={addButtonClicked}>\r\n            <input className=\"add-todo-input\" aria-label=\"Add a new todo item\" type=\"text\" placeholder=\"Type in your next task...\" value={toDo.task} onChange={handleInput}></input>\r\n            <button className=\"add-todo-button blue-button\" aria-label=\"add\" type=\"submit\"><BsPlus/></button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddToDo;","import React, {useState, useEffect} from 'react';\r\nimport { BsCheck, BsX } from 'react-icons/bs';\r\n\r\nfunction EditToDo(props){\r\n\r\n    //keeping track of which toDo is being updated\r\n    const [toDo, setToDo] = useState(props.currentToDo);\r\n    const handleInput = (event) => {\r\n        setToDo({ ...toDo, task: event.target.value })\r\n    }\r\n\r\n    //using updateToDo from ToDoList to update toDo\r\n    const editButtonPressed = (event) => {\r\n        event.preventDefault();\r\n        props.updateToDo(toDo.id, toDo);\r\n    }\r\n\r\n    useEffect(() => setToDo(props.currentToDo), [props]);\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"edit-title\">Edit Item</h2>\r\n            <form className=\"edit-form\" onSubmit={editButtonPressed}>\r\n                <input className=\"edit-input\" aria-label=\"edit to-do\" type=\"text\" value={toDo.task} onChange={handleInput}/>\r\n                <button className=\"blue-button edit-done\" aria-label=\"edit\" type=\"submit\"><BsCheck/></button>\r\n                <button className=\"red-button edit-cancel\" aria-label=\"cancel\" type=\"button\" onClick={() => props.setEditing(false)}><BsX/></button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditToDo;","import React, {useState} from 'react';\r\nimport ListItems from './ListItems';\r\nimport AddToDo from './AddToDo';\r\nimport EditToDo from './EditToDo';\r\nimport './todo.css';\r\n\r\nfunction ToDoList() {\r\n\r\n  //retrieving items from localStorage\r\n  const listOfToDos = []\r\n\r\n  for(let key in localStorage){\r\n    if(window.localStorage.getItem(key)){\r\n      const parsed = JSON.parse(window.localStorage.getItem(key));\r\n      listOfToDos.push({id: +key, task: parsed.toDo, completed: parsed.completed});\r\n    }\r\n    \r\n  }\r\n\r\n  listOfToDos.sort((a, b) => a.id - b.id); //keeps list in the same general order (theoretically)\r\n\r\n  const [toDos, setToDos] = useState(listOfToDos);\r\n\r\n  //setting which toDos were already completed when they were retrieved\r\n  const initialCompleted = {}\r\n  for(let i = 0; i < toDos.length; i++){\r\n      initialCompleted[toDos[i].id] = toDos[i].completed;\r\n  }\r\n  const [completed, setCompleted] = useState(initialCompleted);\r\n\r\n  //When something is checked off, it sets the completed property\r\n  function handleCheck(toDo){\r\n    toDo.completed = !toDo.completed;\r\n    window.localStorage.setItem(toDo.id.toString(), JSON.stringify({toDo: toDo.task, completed: toDo.completed}));\r\n    setToDos(toDos);\r\n  }\r\n  \r\n  //Handles adding a toDo\r\n  function addToDo(toDo){\r\n    const lastElement = toDos[toDos.length - 1];\r\n    if(lastElement){\r\n      toDo.id = lastElement.id + 1;\r\n    } else{\r\n      toDo.id = 1;\r\n    }\r\n    setToDos([...toDos, toDo]);\r\n    setCompleted({...completed, [toDo.id]: toDo.completed});\r\n    window.localStorage.setItem(toDo.id.toString(), JSON.stringify({toDo: toDo.task, completed: toDo.completed}));\r\n  }\r\n\r\n  //Handles deleting toDos\r\n  function deleteToDo(id){\r\n    setToDos(toDos.filter((toDo) => toDo.id !== id));\r\n    setEditing(false);\r\n    const {[id]: empty, ...filteredValues} = completed;\r\n    setCompleted(filteredValues);\r\n    window.localStorage.removeItem(id);\r\n  }\r\n\r\n  //Keeps track of whether we are in editing mode and which toDo is being edited\r\n  const [editing, setEditing] = useState(false);\r\n  const initialState = { id: null, task: '', completed: false};\r\n  const [currentToDo, setCurrentToDo] = useState(initialState);\r\n\r\n  //Handles editing toDos\r\n  function editToDo(toDo){\r\n    setEditing(true);\r\n    setCurrentToDo({id: toDo.id, task: toDo.task, completed: toDo.completed}); \r\n  }\r\n\r\n  function updateToDo(id, updatedToDo){\r\n    setEditing(false);\r\n    setToDos(toDos.map((toDo) => toDo.id === id ? updatedToDo : toDo));\r\n    window.localStorage.setItem(id.toString(), JSON.stringify({toDo: updatedToDo.task, completed: updatedToDo.completed}));\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-list app-section\">\r\n    {editing ? (\r\n      <EditToDo\r\n        setEditing={setEditing}\r\n        currentToDo={currentToDo}\r\n        updateToDo={updateToDo}/>\r\n    ) :\r\n      <>\r\n        <AddToDo addToDo={addToDo} />\r\n        <ListItems \r\n          toDos={toDos} \r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n          deleteToDo={deleteToDo} \r\n          editToDo={editToDo} \r\n          handleCheck={handleCheck}\r\n          />\r\n      </>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {BsPlay, BsArrowCounterclockwise, BsPause, BsArrowUp, BsArrowDown} from 'react-icons/bs';\r\nimport {useAlert} from 'react-alert';\r\nimport './timer.css';\r\n\r\nfunction Timer(){\r\n    const [timeRemaining, setTimeRemaining] = useState(0);\r\n    const [timerStart, setTimerStart] = useState(false);\r\n    const alert = useAlert();\r\n\r\n    useEffect(() => {\r\n        //if time is up, stop the timer and let the user know\r\n        if(timeRemaining < 0){ \r\n            setTimerStart(false);\r\n            if(!timerStart){\r\n                alert.show(<span style={{fontFamily: 'Urbanist'}}>Time's up!</span>);\r\n            }\r\n            return;\r\n        }\r\n\r\n        //if timer is going, tick down the time\r\n        if(timerStart){\r\n            const intervalId = setInterval(() => {\r\n                setTimeRemaining(timeRemaining - 1);\r\n            }, 1000)\r\n            \r\n            //return the clean up function\r\n            return () => clearInterval(intervalId);\r\n        }\r\n        \r\n    }, [timerStart, timeRemaining, alert]);\r\n\r\n    function PauseTimer(){\r\n        setTimerStart(false);\r\n    }\r\n\r\n    function resetTimer(){\r\n        setTimeRemaining(0);\r\n        setTimerStart(false);\r\n    }\r\n    \r\n    //displaying hours, minutes, and seconds correctly\r\n    let hours = Math.floor(timeRemaining / 3600);\r\n    hours = hours >= 10 ? hours : \"0\" + hours;\r\n    let minutes = Math.floor(timeRemaining / 60) % 60;\r\n    minutes = minutes >= 10 ? minutes : \"0\" + minutes;\r\n    let seconds = timeRemaining % 60;\r\n    seconds = seconds >= 10 ? seconds : \"0\" + seconds;\r\n\r\n    return (\r\n        <div className=\"timer app-section\">\r\n            <h2 className=\"timer-title\">Study Timer</h2>\r\n\r\n            <div className={timeRemaining >= 0 ? \"timer-display\" : \"completed-timer\"}>\r\n                {/* Display buttons to increase hours, minutes, and seconds. */}\r\n                {!timerStart && timeRemaining >= 0 && \r\n                    (<div className=\"change-time-buttons inc-buttons\">\r\n                        <button className=\"timer-button inc-hour\" aria-label=\"increase hours by one\" onClick={() => setTimeRemaining(timeRemaining + 3600)}><BsArrowUp/></button>\r\n                        <button className=\"timer-button inc-min\" aria-label=\"increase minutes by one\" onClick={() => setTimeRemaining(timeRemaining + 60)}><BsArrowUp/></button>\r\n                        <button className=\"timer-button inc-sec\" aria-label=\"increase seconds by one\" onClick={() => setTimeRemaining(timeRemaining + 1)}><BsArrowUp/></button>\r\n                    </div>)}\r\n                    \r\n                {/* Display current time or a time's up button? */}\r\n                {timeRemaining >= 0 ? <div className=\"time\"> <span>{hours}</span>:<span>{minutes}</span>:<span>{seconds}</span> </div>\r\n                 : <>\r\n                    <div className=\"times-up\">Time's up!</div>\r\n                    <button className=\"reset-timer timer-control\" aria-label=\"reset timer\" onClick={resetTimer}><BsArrowCounterclockwise/></button>\r\n                 </>}\r\n\r\n                {/* Which decrease buttons to show? */}\r\n                {!timerStart &&\r\n                    (<div className=\"change-time-buttons dec-buttons\">\r\n                    {timeRemaining >= 3600 ? \r\n                        <button className=\"timer-button dec-hour\" aria-label=\"decrease hours by one\" onClick={() => setTimeRemaining(timeRemaining - 3600)}><BsArrowDown/></button>\r\n                    : <div className=\"button-filler\"></div>}\r\n                    {timeRemaining >= 60 ? \r\n                        <button className=\"timer-button dec-min\" aria-label=\"decrease minutes by one\" onClick={() => setTimeRemaining(timeRemaining - 60)}><BsArrowDown/></button>\r\n                    : <div className=\"button-filler\"></div>}\r\n                    {timeRemaining >= 1 ? \r\n                        <button className=\"timer-button dec-sec\" aria-label=\"decrease seconds by one\" onClick={() => setTimeRemaining(timeRemaining - 1)}><BsArrowDown/></button>\r\n                        : <div className=\"empty\"></div>}</div>)}\r\n            </div>\r\n            \r\n            {/* Which control buttons to show? */}\r\n            {!timerStart && timeRemaining > 0 && \r\n                <div className=\"control-buttons\">\r\n                    <button className=\"play-timer timer-control\" aria-label=\"play timer\" onClick={() => setTimerStart(true)}><BsPlay/></button>\r\n                    <button className=\"reset-timer timer-control\" aria-label=\"reset timer\" onClick={resetTimer}><BsArrowCounterclockwise/></button>\r\n                </div>\r\n            }\r\n            <div className=\"pause-container\">     \r\n                {timeRemaining > 0 && timerStart && <button className=\"pause-timer timer-control\" aria-label=\"pause timer\" onClick={PauseTimer}><BsPause/></button> }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer;","export default __webpack_public_path__ + \"static/media/IMG_0009.149d6868.JPG\";","export default __webpack_public_path__ + \"static/media/basil.333eef70.JPG\";","import React, {useState, useEffect} from 'react';\r\nimport {BsArrowCounterclockwise} from 'react-icons/bs';\r\nimport './studybreak.css';\r\nimport cat1Default from '../images/IMG_0009.JPG';\r\nimport cat2Default from '../images/basil.JPG';\r\n\r\nfunction StudyBreak(){\r\n\r\n    const [imageURLs, setImageURLs] = useState({cat1: null, cat2: null});\r\n    const [newImagePressed, setNewImagePressed] = useState({cat1: false, cat2: false});\r\n\r\n    useEffect(() => {\r\n        (async function fetchAnimals(){\r\n            try{\r\n                //waiting for responses\r\n                const [cat1Response, cat2Response] = await Promise.all([\r\n                    fetch(\"https://api.thecatapi.com/v1/images/search\"),\r\n                    fetch(\"https://api.thecatapi.com/v1/images/search\")\r\n                ]);\r\n\r\n                //setting URLs\r\n                const cat1URL = await cat1Response.json();\r\n                const cat2URL = await cat2Response.json();\r\n                setImageURLs({ cat1: cat1URL[0].url, cat2: cat2URL[0].url })\r\n            } catch(err){\r\n                console.log(err);\r\n            }\r\n        })(); \r\n    }, [newImagePressed.cat1, newImagePressed.cat2]); //only run this if reload button was pressed\r\n\r\n    const loadNewImages = () => {\r\n        setNewImagePressed({cat1: !newImagePressed.cat1, cat2: !newImagePressed.cat2});\r\n    }\r\n\r\n        return (\r\n        <div className=\"app-section study-break\">\r\n            <h2 className=\"study-title\">Study Break</h2>\r\n            \r\n            <div className=\"animal-images\">\r\n                <img className=\"animal-image\" alt=\"A cute cat\" src={imageURLs.cat1} onError={(e) => {e.target.onerror = null; e.target.src = cat1Default}}/>\r\n                <img className=\"animal-image\" alt=\"A cute cat\" src={imageURLs.cat2} onError={(e) => {e.target.onerror = null; e.target.src = cat2Default}}/>                \r\n            </div>\r\n            <div className=\"generate-images-buttons\">\r\n                <button className=\"generate-images-button\" aria-label=\"generate new images\" onClick={loadNewImages}><BsArrowCounterclockwise/></button>\r\n            </div>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default StudyBreak;","export default __webpack_public_path__ + \"static/media/study_icon.96ab1355.png\";","import React from 'react';\r\nimport {Link} from 'react-scroll';\r\nimport icon from '../images/study_icon.png';\r\nimport './navbar.css';\r\n\r\nfunction NavBar(){\r\n\r\n\r\n    return (\r\n        <div className=\"nav-options\">\r\n            <img src={icon} alt=\"logo of a colorful book\" className=\"icon\" height=\"20\"/>\r\n            <span className=\"nav-title\"><Link to=\"page-title\" smooth=\"true\" className=\"nav-item\" offset={-90}>Study Tool</Link></span>\r\n            <span><Link to=\"todo-list\" className=\"nav-item\" smooth=\"true\" offset={-90}>To Do List</Link></span>\r\n            <span><Link to=\"timer\" className=\"nav-item\" smooth=\"true\" offset={-90}>Timer</Link></span>\r\n            <span><Link to=\"study-break\" className=\"nav-item\" smooth=\"true\" offset={-90}>Study Break</Link></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport ToDoList from './to-do-list/ToDoList';\r\nimport Timer from './timer/Timer';\r\nimport StudyBreak from './study-break/StudyBreak';\r\nimport NavBar from './navigation/NavBar';\r\nimport { Provider as AlertProvider } from 'react-alert';\r\nimport AlertTemplate from 'react-alert-template-basic';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <AlertProvider template={AlertTemplate}>\r\n      <NavBar/>\r\n      <h1 className=\"app-section\" id=\"page-title\">Study Tool</h1>\r\n      <ToDoList id=\"todo-list\"/>\r\n      <Timer id=\"timer\"/>\r\n      <StudyBreak id=\"study-break\"/>\r\n    </AlertProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}